{"version":3,"file":"static/js/316.1be65473.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/components/MovieSearchForm/MovieSearchForm.module.css?70b3","components/MovieSearchForm/MovieSearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 110vh;\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerLoader } from './Loader.styled';\n\nexport const Loader = ({ children }) => {\n  return <ContainerLoader>{children}</ContainerLoader>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"listMovies\":\"MoviesList_listMovies__uQIHW\",\"movieItem\":\"MoviesList_movieItem__p4FQU\",\"poster\":\"MoviesList_poster__aewlD\",\"movieName\":\"MoviesList_movieName__HnGim\"};","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const defaultPosterImg =\n    'https://www.reelviews.net/resources/img/default_poster.jpg';\n  return (\n    <ul className={css.listMovies}>\n      {movies.map(movie => (\n        <li key={movie.id} className={css.movieItem}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            <img\n              className={css.poster}\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : defaultPosterImg\n              }\n              alt={movie.title}\n            />\n            <p className={css.movieName}>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formContainer\":\"MovieSearchForm_formContainer__c0Ue8\",\"formSearch\":\"MovieSearchForm_formSearch__gosL-\",\"input\":\"MovieSearchForm_input__L3jrA\",\"buttonSubmit\":\"MovieSearchForm_buttonSubmit__Deu3r\"};","import { useSearchParams } from 'react-router-dom';\nimport toast from 'react-hot-toast';\nimport css from './MovieSearchForm.module.css';\n// import css from './MovieSearchForm.module.css';\n\nexport const MovieSearchForm = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('searchQuery') ?? '';\n\n  const handleSumbit = e => {\n    e.preventDefault();\n    if (e.target.elements.searchQuery.value.trim() === '') {\n      toast.error('Please, enter something');\n      return;\n    }\n    setSearchParams({ searchQuery: e.target.elements.searchQuery.value });\n    e.currentTarget.reset();\n  };\n\n  return (\n    <div className={css.formContainer}>\n      <form\n        className={css.formSearch}\n        autoComplete=\"off\"\n        onSubmit={handleSumbit}\n      >\n        <input\n          className={css.input}\n          type=\"text\"\n          placeholder=\"Enter movie...\"\n          name=\"searchQuery\"\n          defaultValue={search}\n        />\n        <button className={css.buttonSubmit} type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovies } from 'services/MovieAPI';\nimport { MovieSearchForm } from 'components/MovieSearchForm/MovieSearchForm';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { PropagateLoader } from 'react-spinners';\nimport { css } from '@emotion/react';\nimport toast from 'react-hot-toast';\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [serchParam] = useSearchParams();\n  const query = serchParam.get('searchQuery');\n\n  useEffect(() => {\n    if (!query) return;\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovies(query);\n        setMovies([...data.results]);\n        if (!data.results.length) {\n          return toast.error('No matches, try to find other movie');\n        }\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [query]);\n\n  return (\n    <div>\n      {isLoading && (\n        <Loader>\n          <PropagateLoader\n            color={'#36D7B7'}\n            css={override}\n            loading={isLoading}\n          />\n        </Loader>\n      )}\n      <MovieSearchForm />\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["ContainerLoader","styled","_templateObject","_taggedTemplateLiteral","Loader","_ref","children","_jsx","MoviesList","movies","location","useLocation","className","css","map","movie","_jsxs","Link","to","concat","id","state","from","src","poster_path","alt","title","MovieSearchForm","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","search","get","autoComplete","onSubmit","e","preventDefault","target","elements","searchQuery","value","trim","currentTarget","reset","toast","type","placeholder","name","defaultValue","override","_useState","useState","_useState2","setMovies","_useState3","_useState4","isLoading","setIsLoading","query","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","fetchMovies","sent","_toConsumableArray","results","length","abrupt","t0","console","log","message","finish","stop","apply","arguments","PropagateLoader","color","loading"],"sourceRoot":""}