{"version":3,"file":"static/js/135.086cf33f.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.js","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContainerLoader = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 110vh;\n`;\n","import PropTypes from 'prop-types';\nimport { ContainerLoader } from './Loader.styled';\n\nexport const Loader = ({ children }) => {\n  return <ContainerLoader>{children}</ContainerLoader>;\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"backLink\":\"MovieDetails_backLink__dzd-p\",\"containerDetails\":\"MovieDetails_containerDetails__qkDYF\",\"imageWrap\":\"MovieDetails_imageWrap__tkCQJ\",\"imagePoster\":\"MovieDetails_imagePoster__x7WDV\",\"listDetails\":\"MovieDetails_listDetails__A1XkP\",\"linkInfo\":\"MovieDetails_linkInfo__CGpXD\",\"infoWrap\":\"MovieDetails_infoWrap__ylYWq\",\"prevWrap\":\"MovieDetails_prevWrap__MBiMy\"};","import { useEffect, useRef, useState } from 'react';\nimport { fetchMovie } from 'services/MovieAPI';\nimport { Outlet, useParams, useLocation, Link } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { PropagateLoader } from 'react-spinners';\nimport { css } from '@emotion/react';\nimport style from './MovieDetails.module.css';\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst MoviesDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const data = await fetchMovie(movieId);\n        setMovie(data);\n      } catch (error) {\n        console.log('Error', error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  const defaultPosterImg =\n    'https://www.reelviews.net/resources/img/default_poster.jpg';\n\n  return (\n    <>\n      {isLoading && (\n        <Loader>\n          <PropagateLoader\n            color={'#36D7B7'}\n            css={override}\n            loading={isLoading}\n          />\n        </Loader>\n      )}\n      <Link className={style.backLink} to={backLinkRef.current}>\n        Go Back\n      </Link>\n      <div className={style.containerDetails}>\n        <div className={style.imageWrap}>\n          <img\n            className={style.imagePoster}\n            alt={movie.title}\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                : defaultPosterImg\n            }\n          />\n        </div>\n        <div className={style.infoWrap}>\n          <h1 className=\"h1\">{movie.title}</h1>\n          <p>\n            User scores: <b>{Math.round(movie.vote_average * 10)}%</b>\n          </p>\n          <h2>Overview</h2>\n          <p>{movie.overview}</p>\n          <h2>Genres</h2>\n          <p>{movie.genres?.map(({ name }) => name).join(', ')}</p>\n        </div>\n      </div>\n      <div className={style.prevWrap}>\n        <h3>Previus information</h3>\n        <ul className={style.listDetails}>\n          <li>\n            <Link className={style.linkInfo} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className={style.linkInfo} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <Outlet />\n      </div>\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["ContainerLoader","styled","_templateObject","_taggedTemplateLiteral","Loader","_ref","children","_jsx","override","css","_location$state$from","_location$state","_movie$genres","_useState","useState","_useState2","_slicedToArray","movie","setMovie","_useState3","_useState4","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","wrap","_context","prev","next","fetchMovie","sent","t0","console","log","message","finish","stop","apply","arguments","_jsxs","_Fragment","PropagateLoader","color","loading","Link","className","style","to","current","alt","title","src","poster_path","concat","Math","round","vote_average","overview","genres","map","_ref2","name","join","Outlet"],"sourceRoot":""}